{"version":3,"sources":["webpack:///./src/components/TagItem/TagItem.js","webpack:///./src/components/NoPosts/NoPosts.js","webpack:///./src/components/AllPosts/AllPosts.js","webpack:///./src/templates/allBlogs.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/PageHeader/PageHeader.js","webpack:///./src/components/TwoCurrentPosts/TwoCurrentPosts.js","webpack:///./node_modules/react-icons/lib/iconContext.mjs","webpack:///./node_modules/react-icons/lib/iconBase.mjs"],"names":["TagItem","props","style","marginLeft","className","to","tagLink","tagName","NoPosts","Container","Grid","Column","computer","tablet","mobile","marginBottom","Row","paddingLeft","paddingRight","role","aria-label","AllPosts","render","renderAllPosts","this","posts","map","post","pathLink","node","frontmatter","path","blogTag","tags","filter","tag","TwoCurrentPosts","key","timeToRead","mainPage","marginTop","container","columns","Header","as","letterSpacing","color","Component","AllBlogPostsTemplate","SiteLayout","lang","seoTitle","seoDesc","seoSlug","pageContext","pathSlug","location","PageHeader","topSegment","headerSegment","formatReadingTime","minutes","cups","Math","round","Array","E","fill","join","formatPostDate","date","Date","prototype","toLocaleDateString","args","day","month","year","Boolean","fontSize","lineHeight","bottomSegment","only","logo","width","marginRight","sizes","title","excerpt","DefaultContext","undefined","size","attr","IconContext","createContext","__assign","Object","assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","GenIcon","data","createElement","IconBase","Tree2Element","tree","child","elem","conf","computedSize","svgProps","stroke","strokeWidth","height","children","Consumer"],"mappings":"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","file":"component---src-templates-all-blogs-js-04f8697c2104c14cd05f.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { FaFolderOpen } from 'react-icons/fa';\nimport './TagItem.css';\n\nconst TagItem = props => {\n  return (\n    <span style={{ marginLeft: '1rem' }}>\n      <FaFolderOpen className=\"post-type-icon\" />\n\n      <span className=\"tag-item\">\n        <Link to={props.tagLink}>{props.tagName}</Link>\n      </span>\n    </span>\n  );\n};\n\nexport default TagItem;\n","import React from 'react';\nimport { Grid, Container } from 'semantic-ui-react';\n\n/**\n * NoPosts component.\n * This resuable component when there are no posts to display.\n */\nconst NoPosts = () => {\n  return (\n    <Container>\n      <Grid>\n        <Grid.Column\n          computer={16}\n          tablet={16}\n          mobile={16}\n          style={{ marginBottom: '2rem' }}\n        >\n          <Grid.Row>\n            <p style={{ paddingLeft: '1rem', paddingRight: '1rem' }}>\n              <span role=\"img\" aria-label=\"scientist\">\n                👨🏻‍🔬\n              </span>{' '}\n              In the lab trying to cook up some posts. Please check back later.{' '}\n              <span role=\"img\" aria-label=\"scientist\">\n                👨🏻‍🔬\n              </span>\n            </p>\n          </Grid.Row>\n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default NoPosts;\n","import React, { Component } from 'react';\nimport { Header, Container, Grid } from 'semantic-ui-react';\nimport TwoCurrentPosts from '../TwoCurrentPosts';\nimport NoPosts from '../NoPosts';\n\n/**\n * AllPosts component displays the first 2 recent blog posts on the home page\n */\nclass AllPosts extends Component {\n  render() {\n    let renderAllPosts = [];\n\n    if (this.props.posts) {\n      renderAllPosts = this.props.posts.map(post => {\n        const pathLink = `/articles/${post.node.frontmatter.path}`;\n        const blogTag = post.node.frontmatter.tags.filter(tag => tag !== 'articles');\n\n        return (\n          <TwoCurrentPosts\n            key={pathLink}\n            pathLink={pathLink}\n            frontmatter={post.node.frontmatter}\n            timeToRead={post.node.timeToRead}\n            blogTag={blogTag}\n            mainPage={false}\n          />\n        );\n      });\n    } else {\n      return <NoPosts />;\n    }\n\n    return (\n      <Container style={{ marginTop: '2rem', marginBottom: '3rem' }}>\n        <Grid container columns={2}>\n          <Header\n            as=\"h3\"\n            style={{ letterSpacing: 10, color: 'rgba(0, 0, 0, 0.4)', marginBottom: 0 }}\n          >\n            ALL ARTICLES\n          </Header>\n\n          <Grid.Row>{renderAllPosts}</Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default AllPosts;\n","import React from 'react';\nimport SiteLayout from '../components/SiteLayout';\nimport PageHeader from '../components/PageHeader';\nimport AllPosts from '../components/AllPosts';\n\nconst AllBlogPostsTemplate = props => {\n  return (\n    <SiteLayout\n      lang=\"en\"\n      seoTitle=\"Articles\"\n      seoDesc=\"Articles page for Daniel Kim\"\n      seoSlug={`/${props.pageContext.pathSlug}`}\n      location={props.location}\n    >\n      <PageHeader topSegment=\"It's my\" headerSegment=\"Articles.\" />\n\n      <AllPosts posts={props.pageContext.posts} />\n    </SiteLayout>\n  );\n};\n\nexport default AllBlogPostsTemplate;\n","/**\n * Use this function to format the blog reading time\n * @param {String} minutes\n * @returns {String}\n */\nexport function formatReadingTime(minutes) {\n  const cups = Math.round(minutes / 5);\n\n  if (cups > 5) {\n    return ` / ${new Array(Math.round(cups / Math.E))\n      .fill('🍱')\n      .join('')} ${minutes} min read`;\n  } else {\n    return ` / ${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n  }\n}\n\n/**\n * Use this function to format the blog post dates. The argument 'lang' is\n * optional and will default to the current user agent locale\n * @param {String} date\n * @param {String} lang\n * @returns {Date}\n */\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n\n  const args = [lang, { day: 'numeric', month: 'long', year: 'numeric' }].filter(Boolean);\n\n  return date.toLocaleDateString(...args);\n}\n\n/**\n * Use this function to format tags\n * @param {Array} tagsArr\n * @returns {String}\n */\nexport function formatTags(tagsArr) {\n  let tagString = '';\n\n  if (tagsArr.length > 0) {\n    for (let i = 0; i < tagsArr.length; i++) {\n      tagString += tagsArr[i];\n\n      if (i / 2 === 0) {\n        tagString = `${tagString}, `;\n      }\n    }\n\n    return tagString;\n  }\n}\n","import React from 'react';\nimport { Header, Container, Grid } from 'semantic-ui-react';\nimport Img from 'gatsby-image';\n\n/**\n * PageHeader component. The reusable component for headers.\n * props = topSegment, bottomSegment, headerSegment\n * topSegment = string\n * headerSegment = string\n * bottomSegment = DOM\n */\nconst PageHeader = props => {\n  return (\n    <Container>\n      <Grid container columns={2} style={{ marginTop: '3rem' }}>\n        <Grid.Row style={{ marginBottom: '2rem' }}>\n          <Grid.Column mobile={16} tablet={10} computer={8}>\n            {props.topSegment ? (\n              <p style={{ marginBottom: '1rem' }}>{props.topSegment}</p>\n            ) : null}\n\n            <Header\n              as=\"h1\"\n              style={{ fontSize: '4rem', marginTop: 0, lineHeight: '4rem' }}\n            >\n              {props.headerSegment}\n            </Header>\n\n            {props.bottomSegment ? props.bottomSegment : null}\n          </Grid.Column>\n\n          <Grid.Column only=\"computer tablet\">\n            {props.logo ? (\n              <Img\n                style={{\n                  width: '50%',\n                  marginTop: '1rem',\n                  marginBottom: '1rem',\n                  marginRight: 'auto',\n                  marginLeft: 'auto',\n                }}\n                sizes={props.logo}\n              />\n            ) : null}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default PageHeader;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { Header, Grid } from 'semantic-ui-react';\nimport TagItem from '../TagItem';\nimport { formatReadingTime, formatPostDate } from '../../utils/helpers';\n\n/**\n * TwoCurrentPosts component.\n * This resuable component is actually more than just 2. This will display all\n * blog posts.\n */\nconst TwoCurrentPosts = props => {\n  return (\n    <Grid.Column\n      computer={props.mainPage ? 8 : 16}\n      tablet={props.mainPage ? 8 : 16}\n      mobile={16}\n      key={props.frontmatter.path}\n      style={{ marginBottom: '3rem' }}\n    >\n      <Grid.Row>\n        <Link to={props.pathLink}>\n          <Header as=\"h3\">{props.frontmatter.title}</Header>\n        </Link>\n      </Grid.Row>\n\n      <Grid.Row style={{ marginTop: '0.5rem', color: 'rgba(0, 0, 0, 0.4)' }}>\n        {props.frontmatter.excerpt}\n      </Grid.Row>\n\n      <Grid.Row style={{ marginTop: '0.5rem', color: 'rgba(0, 0, 0, 0.4)' }}>\n        {formatPostDate(props.frontmatter.date, 'en')}\n\n        {`${formatReadingTime(props.timeToRead)}`}\n\n        <TagItem tagLink={`/tags/${props.blogTag}`} tagName={props.blogTag} />\n      </Grid.Row>\n\n      <Grid.Row style={{ marginTop: '0.5rem' }} className=\"dkim-link\">\n        <Link to={props.pathLink}>Read more →</Link>\n      </Grid.Row>\n    </Grid.Column>\n  );\n};\n\nexport default TwoCurrentPosts;\n","import React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var computedSize = props.size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n\n    var attr = props.attr,\n        svgProps = __rest(props, [\"attr\"]);\n\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign({\n        color: props.color || conf.color\n      }, conf.style, props.style),\n      height: computedSize,\n      width: computedSize\n    }), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}"],"sourceRoot":""}