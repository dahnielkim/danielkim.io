{"version":3,"sources":["webpack:///./src/components/BlogFooter/BlogFooter.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js","webpack:///./src/components/ArticleFooter/ArticleFooter.js","webpack:///./src/templates/blogPost.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO/SEO.js","webpack:///./src/components/BurgerIcon/BurgerIcon.js","webpack:///./src/components/MobileMenu/MobileMenu.js","webpack:///./src/components/Navigation/Navigation.js","webpack:///./src/components/Footer/Footer.js","webpack:///./src/components/SiteLayout/SiteLayout.js","webpack:///./src/components/SiteLayout/index.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/TagItem/TagItem.js","webpack:///./src/components/TagItem/index.js"],"names":["BlogFooter","props","react_default","a","createElement","className","Grid","Row","stretched","Column","width","textAlign","prev","gatsby_browser_entry","to","type","frontmatter","path","title","next","SegmentGroup","children","compact","content","horizontal","piled","raised","size","stacked","classes","classnames_default","Object","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","extends_default","lib","isNil","handledProps","propTypes","Segment_SegmentGroup","SegmentInline","Segment_SegmentInline","Segment","attached","basic","circular","clearing","color","disabled","floated","inverted","loading","placeholder","padded","secondary","tertiary","vertical","Group","Inline","Segment_Segment","ButtonContent","hidden","visible","Button_ButtonContent","ButtonGroup","buttons","fluid","icon","labeled","negative","positive","primary","toggle","widths","isNil_default","map_default","button","elements_Button_Button","create","Button_ButtonGroup","ButtonOr","text","data-text","Button_ButtonOr","Button_Button","_Component","Button","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","react","_this$props","label","_this$props2","tabIndex","invoke_default","ref","current","e","preventDefault","_this$props3","labelPosition","inherits_default","createClass_default","key","value","role","_this$props4","active","animated","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","computeTabIndex","buttonClasses","containerClasses","labelElement","Label","defaultProps","pointing","autoGenerateKey","onClick","handleClick","Ref","innerRef","aria-pressed","undefined","Icon","hasChildren","computeButtonAriaRole","as","factories","ArticleFooter","render","only","href","height","style","border","src","alt","data-show-count","marginLeft","borderRadius","Image","React","Component","__webpack_require__","d","__webpack_exports__","query","Template","imgSizes","pageContext","data","location","markdownRemark","html","blogTag","tag","filter","featuredImage","childImageSharp","sizes","SiteLayout","lang","seoTitle","seoDesc","excerpt","seoSlug","pathSlug","Container","gatsby_image_default","container","columns","marginTop","marginBottom","Header","formatPostDate","date","formatReadingTime","timeToRead","TagItem","tagLink","tagName","dangerouslySetInnerHTML","__html","components_BlogFooter_BlogFooter","ArticleFooter_ArticleFooter_ArticleFooter","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","json","shape","SEO","meta","image","description","slug","_ref$lang","siteMetadata","site","metaDescription","metaImage","siteUrl","url","Helmet_default","htmlAttributes","titleTemplate","name","property","social","twitter","async","_3236765318","array","BurgerIcon","open","objectWithoutPropertiesLoose_default","MobileMenu","close","pathName","Menu","Item","includes","Navigation","position","zIndex","particles_default","left","right","top","opacity","borderBottom","params","particles","number","line_linked","enable","distance","interactivity","events","onhover","mode","borderless","stackable","paddingLeft","reactjs_popup_es","modal","overlayStyle","background","contentStyle","closeOnDocumentClick","trigger","components_BurgerIcon_BurgerIcon","components_MobileMenu_MobileMenu","Footer","Divider","List","divided","link","fontSize","maxWidth","marginRight","SEO_SEO","Navigation_Navigation_Navigation","components_Footer_Footer","components_SiteLayout_SiteLayout","minutes","cups","Math","round","E","fill","join","_date","Date","prototype","toLocaleDateString","day","month","year","Boolean","fa","components_TagItem_TagItem"],"mappings":"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","file":"component---src-templates-blog-post-js-29ad411566841c3e9aa8.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { Grid } from 'semantic-ui-react';\nimport './BlogFooter.css';\n\nconst BlogFooter = props => {\n  return (\n    <footer className=\"center-text footer dkim-footer-container\">\n      <Grid>\n        <Grid.Row stretched>\n          <Grid.Column width={8} textAlign=\"left\">\n            <span className=\"blog-prev-nav\">\n              {props.prev && (\n                <Link\n                  to={`/${props.type}/${props.prev.frontmatter.path}`}\n                  className=\"dkim-link\"\n                >\n                  ← {props.prev.frontmatter.title}\n                </Link>\n              )}\n            </span>\n          </Grid.Column>\n\n          <Grid.Column width={8} textAlign=\"right\">\n            <span className=\"blog-next-nav\">\n              {props.next && (\n                <Link\n                  to={`/${props.type}/${props.next.frontmatter.path}`}\n                  className=\"dkim-link\"\n                >\n                  {props.next.frontmatter.title} →\n                </Link>\n              )}\n            </span>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </footer>\n  );\n};\n\nexport default BlogFooter;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport Ref from '../../addons/Ref';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"focus\", function () {\n      return _invoke(_this.ref.current, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"computeButtonAriaRole\",\n    value: function computeButtonAriaRole(ElementType) {\n      var role = this.props.role;\n      if (!_isNil(role)) return role;\n      if (ElementType !== 'button') return 'button';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(Ref, {\n          innerRef: this.ref\n        }, React.createElement(\"button\", {\n          className: buttonClasses,\n          \"aria-pressed\": toggle ? !!active : undefined,\n          disabled: disabled,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content)), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      var role = this.computeButtonAriaRole(ElementType);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf(_toConsumableArray(SUI.COLORS).concat(['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;","import React from 'react';\nimport { Link } from 'gatsby';\nimport { Button, Grid, Segment, Image } from 'semantic-ui-react';\nimport './ArticleFooter.css';\n\nexport default class ArticleFooter extends React.Component {\n  render() {\n    return (\n      <Grid className=\"dkim-article-footer-container\">\n        <Grid.Row only=\"computer tablet\">\n          <Segment padded=\"very\" raised>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column width={8}>\n                  <Grid>\n                    <Grid.Row>\n                      <h2>A quick word from the author</h2>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                      Hey, I'm Daniel! I like to write about software development and\n                      other topics that interest me. If you enjoy my content, please\n                      consider supporting me by buying me a cup of coffee to keep me\n                      going! If you have suggestions or would like to hear about a\n                      specific topic, feel to free to message me on Twitter!\n                    </Grid.Row>\n\n                    <Grid.Row>\n                      <a href=\"https://ko-fi.com/A0A8S20V\">\n                        <img\n                          height=\"36\"\n                          style={{ border: 0, height: 36 }}\n                          src=\"https://az743702.vo.msecnd.net/cdn/kofi2.png?v=0\"\n                          border=\"0\"\n                          alt=\"Buy Me a Coffee\"\n                        />\n                      </a>\n\n                      <a\n                        href=\"https://twitter.com/intent/tweet?screen_name=dahnielkim&ref_src=twsrc%5Etfw\"\n                        className=\"twitter-mention-button\"\n                        data-show-count=\"false\"\n                      >\n                        <Button\n                          color=\"twitter\"\n                          style={{ height: 36, marginLeft: 10, borderRadius: 10 }}\n                        >\n                          Tweet to @dahnielkim\n                        </Button>\n                      </a>\n                    </Grid.Row>\n                  </Grid>\n                </Grid.Column>\n\n                <Grid.Column width={8}>\n                  <Link to=\"/\">\n                    <Image\n                      floated=\"right\"\n                      style={{ height: 200 }}\n                      src=\"/assets/profile_pic_circular.png\"\n                    />\n                  </Link>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Segment>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport { Header, Container, Grid } from 'semantic-ui-react';\nimport TagItem from '../components/TagItem';\nimport SiteLayout from '../components/SiteLayout';\nimport BlogFooter from '../components/BlogFooter';\nimport ArticleFooter from '../components/ArticleFooter';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\n// Template component for all blog posts\nconst Template = props => {\n  const { pageContext, data, location } = props;\n\n  // gets next and prev path slugs\n  const { next, prev } = pageContext;\n  const { markdownRemark } = data;\n  const html = markdownRemark.html;\n  const blogTag = pageContext.tag.filter(tag => tag !== pageContext.type);\n  let imgSizes;\n\n  if (markdownRemark.frontmatter.featuredImage) {\n    imgSizes = markdownRemark.frontmatter.featuredImage.childImageSharp.sizes;\n  }\n\n  return (\n    <SiteLayout\n      lang=\"en\"\n      seoTitle={markdownRemark.frontmatter.title}\n      seoDesc={markdownRemark.frontmatter.excerpt}\n      seoSlug={`/${pageContext.pathSlug}`}\n      location={location}\n    >\n      <Container>\n        {imgSizes ? <Img sizes={imgSizes} /> : null}\n\n        <Grid container columns={1} style={{ marginTop: '3rem', marginBottom: '1rem' }}>\n          <Grid.Row>\n            <Grid.Column>\n              <Grid.Row style={{ marginBottom: '1rem' }}>\n                <Header as=\"h1\">{markdownRemark.frontmatter.title}</Header>\n              </Grid.Row>\n\n              <Grid.Row style={{ marginBottom: '1rem', color: 'rgba(0, 0, 0, 0.4)' }}>\n                {formatPostDate(markdownRemark.frontmatter.date, 'en')}\n                {formatReadingTime(markdownRemark.timeToRead)}\n                <TagItem tagLink={`/tags/${blogTag}`} tagName={blogTag} />\n              </Grid.Row>\n\n              <div dangerouslySetInnerHTML={{ __html: html }} />\n\n              <BlogFooter prev={prev} next={next} type={pageContext.type} />\n\n              <ArticleFooter />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </SiteLayout>\n  );\n};\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        excerpt\n        featuredImage {\n          childImageSharp {\n            sizes(maxWidth: 500) {\n              ...GatsbyImageSharpSizes\n            }\n          }\n        }\n      }\n      timeToRead\n    }\n  }\n`;\n\nexport default Template;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate:\n                    slug === '/'\n                      ? `Home - ${siteMetadata.title}`\n                      : `%s — ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} by Daniel Kim`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : [],\n              )\n              .concat(meta)}\n          >\n            {/* Google analytics */}\n            <script\n              async\n              src=\"https://www.googletagmanager.com/gtag/js?id=UA-135482517-1\"\n            />\n            <script>\n              {`\n                window.dataLayer = window.dataLayer || []; function\n                gtag(){dataLayer.push(arguments)}\n                gtag('js', new Date()); gtag('config',\n                'UA-135482517-1');\n              `}\n            </script>\n          </Helmet>\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default SEO;\n","import React from 'react';\nimport \"./BurgerIcon.css\";\n\nconst BurgerIcon = ({ open, ...props }) => (\n  <div className={open ? 'burger-menu open' : 'burger-menu'} {...props}>\n    <div className=\"bar1\" key=\"b1\" />\n    <div className=\"bar2\" key=\"b2\" />\n    <div className=\"bar3\" key=\"b3\" />\n  </div>\n);\n\nexport default BurgerIcon;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { Menu, Grid, Container } from 'semantic-ui-react';\n\nconst MobileMenu = ({ close, pathName }) => {\n  return (\n    <Container>\n      <Grid>\n        <Menu fluid secondary pointing vertical widths={16}>\n          <Link to=\"/\">\n            <Menu.Item active={pathName === '/'} onClick={close}>\n              Home\n            </Menu.Item>\n          </Link>\n\n          <Link to=\"/articles\">\n            <Menu.Item active={pathName.includes('/articles')} onClick={close}>\n              Articles\n            </Menu.Item>\n          </Link>\n\n          {/* <Link to=\"/portfolio\">\n            <Menu.Item active={pathName === '/portfolio'} onClick={close}>\n              Portfolio\n            </Menu.Item>\n          </Link> */}\n\n          <Link to=\"/about\">\n            <Menu.Item active={pathName === '/about'} onClick={close}>\n              About\n            </Menu.Item>\n          </Link>\n\n          <Link to=\"/uses\">\n            <Menu.Item active={pathName === '/uses'} onClick={close}>\n              Uses\n            </Menu.Item>\n          </Link>\n        </Menu>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default MobileMenu;\n","import React, { Component } from 'react';\nimport { Menu, Grid, Image, Container } from 'semantic-ui-react';\nimport { Link } from 'gatsby';\nimport Popup from 'reactjs-popup';\nimport BurgerIcon from '../BurgerIcon';\nimport MobileMenu from '../MobileMenu';\nimport Particles from 'react-particles-js';\nimport './Navigation.css';\n\n/**\n * Navigation component displays the navbar and handles its navigation\n */\nexport default class Navigation extends Component {\n  render() {\n    const { pathname } = this.props.location;\n\n    return (\n      <Container>\n        <Grid\n          container\n          columns={1}\n          style={{ position: 'relative', zIndex: 1000, marginBottom: 0 }}\n        >\n          <Grid.Row only=\"computer tablet\">\n            <Particles\n              style={{\n                position: 'absolute',\n                left: 0,\n                right: 0,\n                top: 0,\n                zIndex: 0,\n                opacity: 0.4,\n                borderBottom: '1px solid rgb(238, 238, 238)',\n              }}\n              height={90}\n              params={{\n                particles: {\n                  color: {\n                    value: '#000000',\n                  },\n                  number: {\n                    value: 50,\n                  },\n                  size: {\n                    value: 1,\n                  },\n                  line_linked: {\n                    enable: true,\n                    distance: 150,\n                    color: '#000000',\n                    opacity: 0.4,\n                    width: 1,\n                  },\n                },\n                interactivity: {\n                  events: {\n                    onhover: {\n                      enable: true,\n                      mode: 'repulse',\n                    },\n                  },\n                },\n              }}\n            />\n            <Grid.Column>\n              <Menu secondary pointing borderless stackable>\n                <Menu.Item style={{ paddingLeft: 0 }}>\n                  <Link to=\"/\">\n                    <Image\n                      style={{ height: 45 }}\n                      src=\"/assets/personal_logo.svg\"\n                    />\n                  </Link>\n                </Menu.Item>\n\n                <Menu.Menu position=\"right\">\n                  <Link to=\"/\">\n                    <Menu.Item name=\"home\" active={pathname === '/'} />\n                  </Link>\n\n                  <Link to=\"/articles\">\n                    <Menu.Item name=\"articles\" active={pathname.includes(`/articles`)} />\n                  </Link>\n\n                  {/* <Link to=\"/portfolio\">\n                    <Menu.Item name=\"portfolio\" active={pathname === '/portfolio'} />\n                  </Link> */}\n\n                  <Link to=\"/about\">\n                    <Menu.Item name=\"about\" active={pathname === '/about'} />\n                  </Link>\n\n                  <Link to=\"/uses\">\n                    <Menu.Item name=\"uses\" active={pathname === '/uses'} />\n                  </Link>\n                </Menu.Menu>\n              </Menu>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row only=\"mobile\">\n            <Popup\n              modal\n              overlayStyle={{ background: 'rgba(255,255,255,0.98' }}\n              contentStyle={contentStyle}\n              closeOnDocumentClick={false}\n              trigger={open => <BurgerIcon open={open} />}\n            >\n              {close => <MobileMenu pathName={pathname} close={close} />}\n            </Popup>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nconst contentStyle = {\n  background: 'rgba(255,255,255,0',\n  width: '80%',\n  border: 'none',\n};\n","import React from 'react';\nimport { Grid, Container, List, Divider } from 'semantic-ui-react';\n\nconst Footer = () => (\n  <Container textAlign=\"center\">\n    <Divider style={{ marginBottom: '2rem' }} />\n\n    <Grid container textAlign=\"center\">\n      <Grid.Row>\n        <List horizontal divided link size=\"small\">\n          <List.Item\n            style={{ color: 'black' }}\n            as=\"a\"\n            href=\"https://www.linkedin.com/in/dshkim/\"\n          >\n            LinkedIn\n          </List.Item>\n\n          <List.Item\n            style={{ color: 'black' }}\n            as=\"a\"\n            href=\"https://www.github.com/dahnielkim\"\n          >\n            GitHub\n          </List.Item>\n\n          <List.Item\n            style={{ color: 'black' }}\n            as=\"a\"\n            href=\"https://www.twitter.com/dahnielkim\"\n          >\n            Twitter\n          </List.Item>\n        </List>\n      </Grid.Row>\n\n      <Grid.Row style={{ fontSize: 13, color: 'rgb(0,0,0,0.4)', marginBottom: '1rem' }}>\n        ©2020 Daniel Kim. All Rights Reserved.\n      </Grid.Row>\n    </Grid>\n  </Container>\n);\n\nexport default Footer;\n","import React from 'react';\nimport SEO from '../SEO';\nimport Navigation from '../Navigation';\nimport Footer from '../Footer';\n\n/**\n * SiteLayout component provides rendering of SEO,\n * navigation bar, and Footer\n */\nconst SiteLayout = props => {\n  return (\n    <div\n      style={{\n        maxWidth: 900,\n        marginRight: 'auto',\n        marginLeft: 'auto',\n        marginTop: '0.5rem',\n      }}\n    >\n      <SEO\n        lang={props.lang}\n        title={props.seoTitle}\n        description={props.seoDesc}\n        slug={props.seoSlug}\n      />\n\n      <Navigation location={props.location} />\n\n      {props.children}\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default SiteLayout;\n","export { default } from \"./SiteLayout\";\n","/**\n * Use this function to format the blog reading time\n * @param {String} minutes\n * @returns {String}\n */\nexport function formatReadingTime(minutes) {\n  const cups = Math.round(minutes / 5);\n\n  if (cups > 5) {\n    return ` / ${new Array(Math.round(cups / Math.E))\n      .fill('🍱')\n      .join('')} ${minutes} min read`;\n  } else {\n    return ` / ${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n  }\n}\n\n/**\n * Use this function to format the blog post dates. The argument 'lang' is\n * optional and will default to the current user agent locale\n * @param {String} date\n * @param {String} lang\n * @returns {Date}\n */\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n\n  const args = [lang, { day: 'numeric', month: 'long', year: 'numeric' }].filter(Boolean);\n\n  return date.toLocaleDateString(...args);\n}\n\n/**\n * Use this function to format tags\n * @param {Array} tagsArr\n * @returns {String}\n */\nexport function formatTags(tagsArr) {\n  let tagString = '';\n\n  if (tagsArr.length > 0) {\n    for (let i = 0; i < tagsArr.length; i++) {\n      tagString += tagsArr[i];\n\n      if (i / 2 === 0) {\n        tagString = `${tagString}, `;\n      }\n    }\n\n    return tagString;\n  }\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { FaFolderOpen } from 'react-icons/fa';\nimport './TagItem.css';\n\nconst TagItem = props => {\n  return (\n    <span style={{ marginLeft: '1rem' }}>\n      <FaFolderOpen className=\"post-type-icon\" />\n\n      <span className=\"tag-item\">\n        <Link to={props.tagLink}>{props.tagName}</Link>\n      </span>\n    </span>\n  );\n};\n\nexport default TagItem;\n","export { default } from \"./TagItem\";\n"],"sourceRoot":""}